
/* -*- mode: dts; tab-width: 2; -*-
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUMBERS 1
#define SYMBOLS 2

/ {
macros {
ZMK_MACRO(KIL, wait-ms = <30>; tap-ms = <40>; bindings =  <&macro_press &kp LCTRL>, <&macro_tap &kp X>, <&macro_release &kp LCTRL>, <&macro_tap &kp K>;)
ZMK_MACRO(SAV, wait-ms = <30>; tap-ms = <40>; bindings =  <&macro_press &kp LCTRL>, <&macro_tap &kp X &kp S>, <&macro_release &kp LCTRL>;)
ZMK_MACRO(BFS, wait-ms = <30>; tap-ms = <40>; bindings =  <&macro_press &kp LCTRL>, <&macro_tap &kp X &kp B>, <&macro_release &kp LCTRL>;)
};
};

/ {
    behaviors {
      colonsemi: colonsemi {
        compatible = "zmk,behavior-mod-morph";
        label = "COLONSEMI";
        #binding-cells = <0>;
        bindings = <&kp COLON>, <&kp SEMI>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };
   };
};

/ {
keymap {
compatible = "zmk,keymap"; 
0_layer {
 bindings = <
 &kp TAB   &kp Q    &kp W    &kp E    &kp R    &kp T        &kp Y    &kp U    &kp I    &kp O    &kp P    &kp BSPC  
&kp LCTRL   &kp A    &kp S    &kp D    &kp F    &kp G        &kp H    &kp J    &kp K    &kp L    &colonsemi   &kp RET 
&kp LSHFT   &kp Z    &kp X    &kp C    &kp V    &kp B        &kp N    &kp M    &kp COMMA    &kp DOT    &kp SLASH    &kp SEMI   
                    &mo 4   &mo 5        &kp N3   &kp LCTRL                      
          &kp RALT  &kp LCMD  &mo 1   &mo 3       &kp LSHFT   &kp SPACE   &mo 2    &kp LS(LC(LA(N4)))            
>;
};

1_layer {
 bindings = <
  &kp TILDE    &kp EXCL    &kp AT    &kp HASH    &kp DLLR    &kp PERCENT        &kp CARET    &kp N7    &kp N8    &kp N9    &none    &kp BSPC  
 &none    &kp DQT    &kp AMPS    &kp STAR    &kp UNDER    &kp N0        &kp PLUS    &kp N4    &kp N5    &kp N6    &kp SQT    &kp PIPE   
 &none    &none    &none    &kp EQUAL    &kp MINUS    &kp DOT        &none    &kp N1    &kp N2    &kp N3    &kp SLASH    &none   
                     &none    &none        &none    &none                       
          &kp RALT  &kp LCMD   &trans    &none        &none    &kp SPACE    &none    &none              
>;
};

2_layer {
 bindings = <
  &kp GRAVE    &none    &none    &none    &none    &none        &none    &none    &none    &none    &none    &kp BSPC  
 &none    &kp LBKT    &kp RBKT    &kp LPAR    &kp RPAR    &none        &none    &kp MINUS    &kp EQUAL    &none    &none    &kp BACKSLASH   
 &none    &kp LT    &kp GT    &kp LBRC    &kp RBRC    &none        &none    &none    &none    &none    &none    &none   
                     &none    &none        &none    &none                       
          &kp RALT  &kp LCMD   &none    &none        &none    &none    &trans    &none              
>;
};

3_layer {
 bindings = <
 &kp ESC  &kp LC(LG(B))   &kp LC(LG(F))   &kp LG(LBRC)   &kp LG(RBRC)    &none        &none   &kp PGUP    &kp UP   &kp PGDN    &none   &kp LC(SLASH)  
 &none   &kp LG(A)   &kp LG(E)   &kp LG(B)   &kp LG(F)   &kp LG(M)       &none    &kp LEFT    &kp DOWN    &kp RIGHT    &none    &none   
 &none    &none    &none    &none    &none    &none        &none   &kp HOME   &none   &kp END   &none    &none   
                     &none    &none        &none    &none                       
          &kp RALT  &kp LCMD  &mo 1    &trans        &none    &none    &none    &none              
>;
};

4_layer {
 bindings = <
  &none    &kp F1   &kp F2   &kp F3   &kp F4   &kp F5      &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &KIL  
 &none    &kp LS(LC(LA(C)))   &kp LS(LC(LA(D)))   &kp LS(LC(LA(S)))   &kp LS(LC(LA(E)))   &kp LS(LC(LA(P)))      &kp LC(LG(N0))  &kp LC(LG(N1))  &kp LC(LG(N2))  &kp LC(LG(N3))   &none   &SAV  
 &none    &none    &none    &none    &none    &none        &none   &BFS  &kp LS(LG(O))  &kp LG(O)   &none    &none   
                     &trans    &none        &none    &none                       
          &kp RALT  &kp LCMD   &none   &tog 6       &none    &none    &none    &none              
>;
};

5_layer {
 bindings = <
  &none    &none    &none    &none    &none    &none        &none    &none    &none    &none    &none    &none   
 &none    &none    &none    &none    &none    &none        &none    &none    &none    &none    &none    &none   
 &none    &none    &none    &none    &none    &none        &none    &none    &none    &none    &none    &none   
                     &none    &none        &none    &none                       
          &kp RALT  &kp LCMD   &none    &none        &none    &none    &none    &none              
>;
};

6_layer {
 bindings = <
 &tog 0   &none    &none    &none    &none    &none        &none    &none    &none    &none    &none    &none   
 &none   &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR       &none    &none    &none    &none    &none    &none   
 &none    &none    &none    &none    &none    &none        &none    &none    &none    &none    &none    &none   
                     &none    &none        &none    &none                       
          &kp RALT  &kp LCMD   &none   &tog 6       &none    &none    &none    &none              
>;
};

7_layer {
 bindings = <
 &kp TAB   &kp Q    &kp W    &kp F    &kp P    &kp G        &kp J    &kp L    &kp U    &kp Y    &colonsemi   &kp BSPC  
&kp LCTRL   &kp A    &kp R    &kp S    &kp T    &kp D        &kp H    &kp N    &kp E    &kp I    &kp O    &kp RET 
&kp LSHFT   &kp Z    &kp X    &kp C    &kp V    &kp B        &kp K    &kp M    &kp COMMA    &kp DOT    &kp SLASH    &none   
                     &none    &none        &none    &none                       
          &kp RALT  &kp LCMD   &mo 1   &mo 3      &kp LSHFT   &kp SPACE   &mo 2   &mo 4              
>;
};

8_layer {
 bindings = <
  &none    &none    &none    &none    &none    &none        &none    &none    &none    &none    &none    &none   
 &none    &none    &none    &none    &none    &none        &none    &none    &none    &none    &none    &none   
 &none    &none    &none    &none    &none    &none        &none    &none    &none    &none    &none    &none   
                     &none    &none        &none    &none                       
          &kp RALT  &kp LCMD   &none    &none        &none    &none    &none    &none              
>;
};
};
};
